//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCinemachineCamera;

    public static Entitas.IMatcher<GameEntity> CinemachineCamera {
        get {
            if (_matcherCinemachineCamera == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CinemachineCamera);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCinemachineCamera = matcher;
            }

            return _matcherCinemachineCamera;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AGame.Code.Gameplay.Features.CameraMovement.CinemachineCameraComponent cinemachineCamera { get { return (AGame.Code.Gameplay.Features.CameraMovement.CinemachineCameraComponent)GetComponent(GameComponentsLookup.CinemachineCamera); } }
    public Unity.Cinemachine.CinemachineCamera CinemachineCamera { get { return cinemachineCamera.Value; } }
    public bool hasCinemachineCamera { get { return HasComponent(GameComponentsLookup.CinemachineCamera); } }

    public GameEntity AddCinemachineCamera(Unity.Cinemachine.CinemachineCamera newValue) {
        var index = GameComponentsLookup.CinemachineCamera;
        var component = (AGame.Code.Gameplay.Features.CameraMovement.CinemachineCameraComponent)CreateComponent(index, typeof(AGame.Code.Gameplay.Features.CameraMovement.CinemachineCameraComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCinemachineCamera(Unity.Cinemachine.CinemachineCamera newValue) {
        var index = GameComponentsLookup.CinemachineCamera;
        var component = (AGame.Code.Gameplay.Features.CameraMovement.CinemachineCameraComponent)CreateComponent(index, typeof(AGame.Code.Gameplay.Features.CameraMovement.CinemachineCameraComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCinemachineCamera() {
        RemoveComponent(GameComponentsLookup.CinemachineCamera);
        return this;
    }
}
