//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCameraControlTouches;

    public static Entitas.IMatcher<GameEntity> CameraControlTouches {
        get {
            if (_matcherCameraControlTouches == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CameraControlTouches);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCameraControlTouches = matcher;
            }

            return _matcherCameraControlTouches;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AGame.Code.Gameplay.Features.CameraMovement.CameraControlTouches cameraControlTouches { get { return (AGame.Code.Gameplay.Features.CameraMovement.CameraControlTouches)GetComponent(GameComponentsLookup.CameraControlTouches); } }
    public bool hasCameraControlTouches { get { return HasComponent(GameComponentsLookup.CameraControlTouches); } }

    public GameEntity AddCameraControlTouches(int newFirst, int newSecond) {
        var index = GameComponentsLookup.CameraControlTouches;
        var component = (AGame.Code.Gameplay.Features.CameraMovement.CameraControlTouches)CreateComponent(index, typeof(AGame.Code.Gameplay.Features.CameraMovement.CameraControlTouches));
        component.First = newFirst;
        component.Second = newSecond;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCameraControlTouches(int newFirst, int newSecond) {
        var index = GameComponentsLookup.CameraControlTouches;
        var component = (AGame.Code.Gameplay.Features.CameraMovement.CameraControlTouches)CreateComponent(index, typeof(AGame.Code.Gameplay.Features.CameraMovement.CameraControlTouches));
        component.First = newFirst;
        component.Second = newSecond;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCameraControlTouches() {
        RemoveComponent(GameComponentsLookup.CameraControlTouches);
        return this;
    }
}
