//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherPreviousTouchPosition;

    public static Entitas.IMatcher<InputEntity> PreviousTouchPosition {
        get {
            if (_matcherPreviousTouchPosition == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.PreviousTouchPosition);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherPreviousTouchPosition = matcher;
            }

            return _matcherPreviousTouchPosition;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public AGame.Code.Gameplay.Features.Input.PreviousTouchPosition previousTouchPosition { get { return (AGame.Code.Gameplay.Features.Input.PreviousTouchPosition)GetComponent(InputComponentsLookup.PreviousTouchPosition); } }
    public UnityEngine.Vector2 PreviousTouchPosition { get { return previousTouchPosition.Value; } }
    public bool hasPreviousTouchPosition { get { return HasComponent(InputComponentsLookup.PreviousTouchPosition); } }

    public InputEntity AddPreviousTouchPosition(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.PreviousTouchPosition;
        var component = (AGame.Code.Gameplay.Features.Input.PreviousTouchPosition)CreateComponent(index, typeof(AGame.Code.Gameplay.Features.Input.PreviousTouchPosition));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public InputEntity ReplacePreviousTouchPosition(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.PreviousTouchPosition;
        var component = (AGame.Code.Gameplay.Features.Input.PreviousTouchPosition)CreateComponent(index, typeof(AGame.Code.Gameplay.Features.Input.PreviousTouchPosition));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public InputEntity RemovePreviousTouchPosition() {
        RemoveComponent(InputComponentsLookup.PreviousTouchPosition);
        return this;
    }
}
